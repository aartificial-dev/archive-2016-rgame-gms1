<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_st_dn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise variables

////////Tech Stats/////////
dmobd = 0;

spd = 1;
atc = 0;
llr = 0;
lud = 1;
msp = 0;
m_x = 0;
m_y = 0;

////////Main Stats/////////
dm = 1;

hp = 3;
mhp = 10;
lhp = hp;

hl = 5;
mhl = 5;
lhl = hl;

mp = 6;
mmp = 8;
lmp = mp;

elc = 50;
lelc = elc;
////////System/////////
image_speed = 1/6;

control = 1;

instance_create(x,y,obj_cam);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Reload</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>temp = min(elc,mmp-mp);
mp += temp;
elc -= temp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Teleport</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shot</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inh = instance_create(x,y,obj_bul);

audio_play_sound_at(snd_shot,x,y,0,100,200,1,0,1);

inh.direction = (arctan2(-lud,llr)*180/pi)+irandom_range(-5,5);
inh.image_angle = inh.direction;

mp--;
obj_cam.alarm[0] = room_speed*8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Attack</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health 
if (dmobd != 0){
    hp -= dmobd;
    dmobd = 0;
}

mp = clamp(mp,0,mmp);
hp = clamp(hp,0,mhp);
hl = clamp(hl,0,mhl);

if (elc &lt; 0){elc = 0;}

if (lhp != hp || lmp != mp || lhl != hl || lelc != elc){
    obj_cam.alarm[0] = room_speed*8;
}
if (hp &lt; lhp){
    audio_play_sound(snd_hurt,0,0);
}

lhp = hp;
lmp = mp;
lhl = hl;
lelc = elc;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving
if (control){



depth = -y;
ud = keyboard_check(ord("S"))-keyboard_check(ord("W"));
lr = keyboard_check(ord("D"))-keyboard_check(ord("A"));

if (!collision_point(x+lr*spd,y,obj_sol,0,1) &amp;&amp; !collision_point(x+lr*spd,y,obj_dec,0,1)){
    x += lr*spd;
}
if (!collision_point(x,y+ud*spd,obj_sol,0,1) &amp;&amp; !collision_point(x,y+ud*spd,obj_sol,0,1)){
    y += ud*spd;
}

msp = abs(lr)+abs(ud);
if (lr != 0){llr = lr; if (ud = 0){lud = 0;}}else if (ud != 0){llr = 0;}
if (ud != 0){lud = ud;}
if (llr != 0 &amp;&amp; msp = 0){lud = 0;}


if (msp != 0 &amp;&amp; (x != xprevious || y != yprevious)){
    sp ++;
    if (sp/15 == 0){
    audio_play_sound_at(snd_walk,x,y,0,100,200,1,0,1); 
    sp = 0;
    }
}else{sp = 0;}


image_speed = 1/6;



}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions
if (control){

//actions

///Attack
/*
if (mouse_check_button_released(mb_left) &amp;&amp; alarm[0] = -1){
          if (mp &gt; 0){
                    image_index = 0; alarm[0] = 35; alarm[1] = 20;
          }else{
                    audio_play_sound(snd_cnts,0,0);
          }
}
*/

///Attack 2
if (mouse_check_button_released(mb_right)){
          if (mp &gt; 0){
                    mp--;
                    inh = instance_create(x,y,obj_bul);
                    inh.direction = point_direction(x,y,mouse_x,mouse_y)+irandom_range(-5,5);
                    inh.image_angle = inh.direction;
                    inh.own = self.id;
                    inh.dm = dm;
                    
                    audio_play_sound(snd_shot,0,0);
          }else{
                    audio_play_sound(snd_cnts,0,0);
          }
}


m_x = x+(cos(degtorad(point_direction(x,y,mouse_x,mouse_y)))*min(50,point_distance(x,y,mouse_x,mouse_y)));
m_y = y-(sin(degtorad(point_direction(x,y,mouse_x,mouse_y)))*min(50,point_distance(x,y,mouse_x,mouse_y)));


///Jump
if (alarm[2] = -1 &amp;&amp; keyboard_check_released(vk_space)){
          if (!collision_line(x,y,m_x,m_y,obj_sol,0,1)){
                    audio_play_sound(snd_telp,0,0);
                    alarm[2] = 100;
                    x = m_x;
                    y = m_y;
          }
}

///Reload
if (keyboard_check_pressed(ord("R")) &amp;&amp; alarm[3] = -1 &amp;&amp; mp &lt; mmp &amp;&amp; elc &gt; 0){
          alarm[3] = 20;
          //obj_cam.alarm[0] = room_speed*8;
          obj_cam.so = 0;
          audio_play_sound(snd_reld,1,0);
}

///Heal
if (keyboard_check_pressed(ord("H"))){
    if (hl &gt; 0 &amp;&amp; hp != mhp){
        tmph = min(hl,mhp-hp);
        hl -= tmph;
        hp += tmph;
        audio_play_sound(snd_heal,0,0);
        //obj_cam.alarm[0] = room_speed*8;
    }
}



}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sound
audio_listener_position(x,y,0);
audio_listener_orientation(-1000, 0, 0, 0, 0, -1000);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw player
if (keyboard_check_pressed(vk_space)){instance_create(x,y,obj_cir);}
if (keyboard_check_released(vk_space)){with (obj_cir){instance_destroy()};}
 
spt = "spr_";

if (msp = 0 &amp;&amp; alarm[0] = -1){
    spt += "st_";}else if(alarm[0] != -1 &amp;&amp; msp = 0){spt += "sh_";}else{spt+="wk_";
}

if (llr != 0){

    switch (llr){
        case 1: spt+="rt"; break;//rt
        case -1:spt+="lf"; break;//lf
    }

}else{

    switch (lud){
        case 1:  spt+="dn"; break;//dn
        case -1: spt+="up"; break;//up
        default: spt+="dn";
    }

}
spt = asset_get_index(spt);
draw_sprite(spt,all,x,y);

if (alarm[2]-80&gt;-1){
    effect_motion_blur(spt,all);
    texture_set_interpolation(0);
}

//draw_text(x,y,arctan2(lud,llr)*180/pi);
//draw_sprite(spr_cam,all,m_x,m_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
