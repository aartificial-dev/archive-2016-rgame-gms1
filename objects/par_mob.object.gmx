<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
image_speed = 1/6;

mainen = 0;

xx = x;
yy = y;

gldm = 0;
state = idle;
//needs intellect

dmarr[0] = 0;
dmari[0] = 0;

dmobo = 0;
dmobd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RELOAD</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ATTACK </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ins = instance_create(x,y,atcob);
ins.dm = dm;
ins.sprite_index = atcsp;
ins.image_speed = 1/6;
ins.cre = self.id;
ins.direction = point_direction(x,y,mainen.x,mainen.y);
ins.image_angle = point_direction(x,y,mainen.x,mainen.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DAMAGE</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///User events
event_user(0);
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bul">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dmobo = other.own;
dmobd = other.dm;
image_index = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take gamage
hp -= dmobd;
audio_play_sound_at(sn_hurt,x,y,0,100,200,1,0,1);

if (alarm[0] = -1){
image_index = 0;
alarm[0] = 28;}


var takenew = 1;
if (dmari[0] = 0){
    dmari[0] ++;
    dmarr[1] = dmobo;
    dmari[1] = 0;
    takenew = 0;
}else{
    for (i = 1; i &lt;= dmari[0]; i++){
        if (dmarr[i] == dmobo){takenew = 0; dmari[i] ++;}
    }
}

if (takenew){
    dmari[0] ++;
    dmarr[dmari[0]] = dmobo;
    dmari[dmari[0]] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving
speed = 0;
if (alarm[0] == -1 &amp;&amp; alarm[1] == -1){
    if (intel = 0){move_towards_point(xx,yy,spd);}
    if (intel = 1){mp_potential_step(xx,yy,spd,0);}
    if (intel = 2){mp_potential_step(xx,yy,spd,0);}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Find MAIN enemy
if (dmobo != 0){
    event_user(2);
    dmobo = 0;
    dmobd = 0;
}

if (mainen = 0){
    for (i = 1; i &lt;= dmari[0]; i++){
        if (dmari[i]+1 &gt;= mx_dm){mainen = dmarr[i];}
    }
}

if (!instance_exists(mainen)){
    mainen = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Statements AI
if (state = idle){
          if (xx == round(x) &amp;&amp; yy == round(y)){
                    do {
                              xx = round(x)+irandom_range(-40,40);
                              yy = round(y)+irandom_range(-40,40);
                    }until (!collision_line(x,y,xx,yy,obj_sol,1,1))
          }

          if (irandom(500) == 1){
                    audio_play_sound_at(sn_idle,x,y,0,100,200,1,0,1);
          }
          if (mainen != 0){
                    state = srch;
          }
}

if (state = srch){
          if (instance_exists(mainen)){
                    if (!collision_line(x,y,mainen.x,mainen.y,obj_sol,0,1)){
                              xx = mainen.x;
                              yy = mainen.y;
                    }
                    if (point_distance(x,y,mainen.x,mainen.y) &lt; 50){
                              state = atck;
                    }
          }
          if (xx == round(x) &amp;&amp; yy == round(y)){
          state = idle;
          }
          
}

if (state = atck){
          if (instance_exists(mainen)){
                    if (!collision_line(x,y,mainen.x,mainen.y,obj_sol,0,1)){
                              xx = mainen.x;
                              yy = mainen.y;
                    }else{
                              state = srch;
                    }
                    
                    if (point_distance(x,y,mainen.x,mainen.y) &lt; 20){
                              xx = x;
                              yy = y;
                    }
                    
                    if (point_distance(x,y,mainen.x,mainen.y) &gt; 50){
                              state = srch;
                    }else if (alarm[1] = -1 &amp;&amp; alarm[2] = -1 &amp;&amp; point_distance(x,y,mainen.x,mainen.y) &lt; 25){
                              alarm[1] = 7*6;
                              alarm[2] = 28*6;
                              image_index = 0;
                              audio_play_sound_at(sn_atc,x,y,0,100,200,1,0,1);
                    }
          }        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
depth = -y;

if (hp &lt;= 0){
          cps = instance_create(x,y,obj_corpse);
          cps.sprite_index = asset_get_index("spr_"+string(sp_nmspce)+"_dt_lf");
          cps.image_speed = 1/6;
          instance_destroy();
          audio_play_sound_at(sn_death,x,y,0,100,200,1,0,1);
}



if (alarm[0] = -1 &amp;&amp; alarm[1] = -1){
    draw_self();
}else if (alarm[0] != -1){
    draw_sprite(asset_get_index("spr_"+string(sp_nmspce)+"_dm_lf"),all,x,y);
}else if (alarm[1] != -1){
    draw_sprite(asset_get_index("spr_"+string(sp_nmspce)+"_at_lf"),all,x,y);
}

if (obj_cam.debug){
          draw_line(x,y,xx,yy);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
